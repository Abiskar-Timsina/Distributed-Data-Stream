# Contains definations for grafana.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.grafana.deploymentName  }}
  namespace: {{ .Values.grafana.namespace }}
  labels:
    app: {{  .Values.grafana.appName  }}
spec:
  replicas: {{  .Values.grafana.replicas  }}
  selector:
    matchLabels:
      app: {{  .Values.grafana.appName  }}
  template:
    metadata:
      labels:
        app: {{  .Values.grafana.appName  }}
    spec:
      containers:
        - name: grafana
          image: {{ .Values.grafana.imageName  }}:{{ .Values.grafana.imageVersion  }}
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-storage
          # We need securityContext here because Grafana creates a new user internally
          # when this user tries to make a dir in our persistant volume, it causes a 
          # permission issue. To overcome this, we use `minikube ssh`, and run the `id`
          # command to see the user group and then run at that user.
          #
          # But, even that may cause issues, so the easiest thing to do is run as root,
          # i.e id 0
          securityContext:
            runAsUser: 0

          resources:
              limits:
                cpu: {{ .Values.grafana.cpuLimit  }} 
                memory: {{ .Values.grafana.memoryLimit  }}
              requests:
                cpu: {{ .Values.grafana.cpuRequest  }} 
                memory: {{ .Values.grafana.memoryRequest  }}
          ports:
          - containerPort: 3000
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: {{ .Values.volume.name }}
